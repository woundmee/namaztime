package services

import (
	"fmt"
	"log/slog"
	"os"
	"telegramBot/clients/namaznsk"
)

type NamazService struct {
	logger *slog.Logger
}

func New(logger *slog.Logger) *NamazService {
	return &NamazService{
		logger: logger,
	}
}

func (ns *NamazService) CommandHelp() string {
	msg := `–ê—Å—Å–∞–ª—è–º—É –∞–ª—è–π–∫—É–º!
–Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤ –ø–æ –≥. –ù–æ—Ä–∏–ª—å—Å–∫.
	
	–ß—Ç–æ —è —É–º–µ—é?
	/help ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É
	/today ‚Äî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–º–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
	
	–¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∫—É–¥–∞ –±–µ—Ä—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —á—Ç–æ –≤—Å—ë –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ. –¢–∞–∫–∂–µ –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –º–æ–∂–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ`

	return msg
}

func (ns *NamazService) CommandToday(today namaznsk.Namaz) string {
	url := os.Getenv("URL_TODAY_SCHEDULE")

	// data, err := today.TodaySchedule(url)
	data, err := today.TodaySchedule(url)
	if err != nil {
		msg := "–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"
		ns.logger.Error(msg, "error", err)
		return err.Error()
	}

	header := "üïó –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n\n"
	// res := fmt.Sprintf("%s\t- –§–∞–¥–∂—Ä\n%s\t- –í–æ—Å—Ö–æ–¥\n%s\t- –ó—É—Ö—Ä", data.Fajr, data.Sunrise, data.Zuhr)
	res := fmt.Sprintf("%s   - –§–∞–¥–∂—Ä\n%s   - –í–æ—Å—Ö–æ–¥\n%s - –ó—É—Ö—Ä\n%s - –ê—Å—Ä\n%s - –ú–∞–≥—Ä–∏–±\n%s - –ò—à–∞",
		data.Fajr, data.Sunrise, data.Zuhr, data.Asr, data.Magrib, data.Isha)

	return header + res
}

// todo: –≤—ã–∑–≤–∞—Ç—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥–æ—Ä—É—Ç–∏–Ω–µ
// todo: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ for{} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—ã–µ 30—Å–µ–∫ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º–∞–∑–∞.
// todo: —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª–µ –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–µ—à–µ —á–µ—Ä–µ–∑ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
func (ns *NamazService) NamazTimeNotify() {
	//
}
