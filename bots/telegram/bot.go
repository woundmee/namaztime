package telegram

import (
	"encoding/json"
	"fmt"
	"io"
	"log"
	"namaztimeApi/models"
	"net/http"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
)

// todo: –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É + –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
// todo: —Å–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø–æ–≤–µ—â–∞–µ—Ç –ø–æ –∫–∞–∂–¥–æ–º—É –Ω–∞–º–∞–∑—É. –ü—Ä–æ–≤–µ—Ä–∫–∞ - –∫–∞–∂–¥—ã–µ 30—Å–µ–∫.

func Bot() {

	godotenv.Load()

	token := os.Getenv("TG_BOT_TOKEN")
	if token == "" {
		log.Fatal("TG_BOT_TOKEN is not set")
	}

	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Panic(err)
	}

	log.Printf("–ë–æ—Ç %s –∑–∞–ø—É—â–µ–Ω!", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 30

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil {
			continue
		}

		if update.Message.IsCommand() {
			switch update.Message.Command() {
			case "help":
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, helper())
				bot.Send(msg)
			case "today":
				msg := tgbotapi.NewMessage(update.Message.Chat.ID, namazToday())
				bot.Send(msg)
			}
			continue
		}

		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)

		// msg := tgbotapi.NewMessage(update.Message.Chat.ID, update.Message.Text)
		// bot.Send(msg)
	}
}

func helper() string {
	return `üëã –ê—Å—Å–∞–ª—è–º—É –∞–ª—è–π–∫—É–º! –Ø telegram-–±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞–º–∞–∑–æ–≤ –ø–æ –≥. –ù–æ—Ä–∏–ª—å—Å–∫.

	‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
	
	–ò—Å—Ç–æ—á–Ω–∏–∫: @nurdkamal
	–í–µ–±-–≤–µ—Ä—Å–∏—è: namaznsk.ru`
}

func namazTodayJson() models.NamazTime {
	url := "https://namaznsk.ru/namaztime/today"
	resp, err := http.Get(url)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —á–µ—Ä–µ–∑ API: %v", err)
	}

	defer resp.Body.Close()

	if resp.StatusCode != http.StatusOK {
		log.Fatalf("–ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: %s", resp.Status)
	}

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ç–µ–ª–∞ –æ—Ç–≤–µ—Ç–∞: %v", err)
	}

	var data models.NamazTime

	err = json.Unmarshal(body, &data)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON: %v", err)
	}

	return data
}

func namazToday() string {
	namaz := namazTodayJson()

	res := fmt.Sprintf("üïò –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n\n%s\t–§–∞–¥–∂—Ä\n%s\t–í–æ—Å—Ö–æ–¥\n%s\t–ó—É—Ö—Ä\n%s\t–ê—Å—Ä\n%s\t–ú–∞–≥—Ä–∏–±\n%s\t–ò—à–∞",
		namaz.Fajr, namaz.Sunrise, namaz.Zuhr, namaz.Asr, namaz.Magrib, namaz.Isha)
	return res
}
